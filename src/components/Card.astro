---
interface Props {
  category: string;
  title: string;
  description: string;
  img: string;
}

const { category, title, description, img } = Astro.props;
---

<div class='relative overflow-hidden group'>
  <svg
    width='416'
    height='505'
    viewBox='0 0 416 505'
    fill='none'
    xmlns='http://www.w3.org/2000/svg'
    class='transition-all duration-300'
  >
    <path d='M0.5 0.5H415.5V434.304L350.282 504.5H0.5V0.5Z' stroke='#E4E4E4'>
    </path>
  </svg>
  <div
    class='absolute top-0 p-8 flex flex-col gap-4 transition-all duration-300 ease-in-out group-hover:translate-y-[-10px]'
  >
    <p class='mb-2 text-left'>â€¢ {category}</p>
    <h3 class='text-xl font-semibold mb-4 text-left'>{title}.</h3>
    <div class='flex items-start h-auto'>
      <img
        src={img}
        alt='abstract-design'
        class='h-24 w-auto mb-8 transition-all duration-300 ease-in-out group-hover:brightness-110'
      />
    </div>
    <p class='text-pretty-sm text-left'>
      {description}
    </p>
  </div>
  <div class='absolute bottom-0 right-0 p-0'>
    <button
      class='w-16 h-16 bg-secondary text-secondary-foreground rounded-full border flex items-center justify-center bg-white hover:bg-black hover:text-white hover:rotate-[-45deg] transition-all duration-300'
    >
      <span class='sr-only'>Go to {title}</span>

      <svg
        xmlns='http://www.w3.org/2000/svg'
        width='24'
        height='24'
        viewBox='0 0 24 24'
        fill='none'
        stroke='currentColor'
        stroke-width='1'
        stroke-linecap='round'
        stroke-linejoin='round'
        aria-hidden='true'
        class='transition-all duration-100 ease-in-out'
      >
        <line x1='3' y1='12' x2='21' y2='12'></line>
        <polyline points='15 6 21 12 15 18'></polyline>
      </svg>
    </button>
  </div>
</div>
<style>
  .service-card {
    padding: 1.5rem;
    /* transition: */
    /* transform 0.3s ease, */
    /* box-shadow 0.3s ease; */
    position: relative;
    background-color: aliceblue;
    clip-path: polygon(
      0 0,
      100% 0,
      100% calc(100% - 50px),
      calc(100% - 50px) 100%,
      0 100%
    );
  }

  .service-card::before {
    content: "";
    position: absolute;
    top: 1px; /* Adjust this value to match the border width */
    left: 1px; /* Adjust this value to match the border width */
    right: 1px; /* Adjust this value to match the border width */
    bottom: 1px; /* Adjust this value to match the border width */
    background-color: brown;
    clip-path: polygon(
      0 0,
      100% 0,
      100% calc(100% - 20px),
      calc(100% - 20px) 100%,
      0 100%
    );
    z-index: -1;
  }

  h2 {
    margin: 0 0 1rem 0;
    font-size: 1.25rem;
  }
  p {
    margin: 0;
    opacity: 0.8;
  }
  /* .service-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  } */
</style>
